{"changed":true,"filter":false,"title":"app.js","tooltip":"/js/app.js","value":"// cards array\nlet card = document.getElementsByClassName(\"card\");\nlet cards = [...card];\n\n// all available cards in game\nconst deck = document.getElementById(\"card-deck\");\n\n// move variable\nlet moves = 0;\nlet counter = document.querySelector(\".moves\");\n\n// variables for star icons\nconst stars = document.querySelectorAll(\".fa-star\");\n\n//variable of matchedCards\nlet matchedCard = document.getElementsByClassName(\"match\");\n\n // stars list\n let starsList = document.querySelectorAll(\".stars li\");\n\n // close icon in modal\n let closeicon = document.querySelector(\".close\");\n\n // declare modal\n let modal = document.getElementById(\"popup1\")\n\n // array for opened cards\nvar openedCards = [];\n\n\n// @description shuffles cards\n// @param {array}\n// @returns shuffledarray\nfunction shuffle(array) {\n    var currentIndex = array.length, temporaryValue, randomIndex;\n\n    while (currentIndex !== 0) {\n        randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n        temporaryValue = array[currentIndex];\n        array[currentIndex] = array[randomIndex];\n        array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n};\n\n\n// @description shuffles cards when page is refreshed / loads\ndocument.body.onload = startGame();\n\n\n// @description function to start a new play \nfunction startGame(){\n \n    // empty the openCards array\n    openedCards = [];\n\n    // shuffle cards\n    cards = shuffle(cards);\n    // remove classes from each card\n    for (var i = 0; i < cards.length; i++){\n        deck.innerHTML = \"\";\n        [].forEach.call(cards, function(item) {\n            deck.appendChild(item);\n        });\n        cards[i].classList.remove(\"show\", \"open\", \"match\", \"disabled\");\n    }\n    // moves reset \n    moves = 0;\n    counter.innerHTML = moves;\n    // rating rating\n    for (var i= 0; i < stars.length; i++){\n        stars[i].style.color = \"#FFD700\";\n        stars[i].style.visibility = \"visible\";\n    }\n    //timer reset\n    second = 0;\n    minute = 0; \n    hour = 0;\n    var timer = document.querySelector(\".timer\");\n    timer.innerHTML = \"0 mins 0 secs\";\n    clearInterval(interval);\n}\n\n\n// @description toggles open and show class to display cards\nvar displayCard = function (){\n    this.classList.toggle(\"open\");\n    this.classList.toggle(\"show\");\n    this.classList.toggle(\"disabled\");\n};\n\n\n// open OpenedCards list and check if cards are match or not\nfunction cardOpen() {\n    openedCards.push(this);\n    var len = openedCards.length;\n    if(len === 2){\n        moveCounter();\n        if(openedCards[0].type === openedCards[1].type){\n            matched();\n        } else {\n            unmatched();\n        }\n    }\n};\n\n\n//action when cards match\nfunction matched(){\n    openedCards[0].classList.add(\"match\", \"disabled\");\n    openedCards[1].classList.add(\"match\", \"disabled\");\n    openedCards[0].classList.remove(\"show\", \"open\", \"no-event\");\n    openedCards[1].classList.remove(\"show\", \"open\", \"no-event\");\n    openedCards = [];\n}\n\n\n// action when cards don't match\nfunction unmatched(){\n    openedCards[0].classList.add(\"unmatched\");\n    openedCards[1].classList.add(\"unmatched\");\n    disable();\n    setTimeout(function(){\n        openedCards[0].classList.remove(\"show\", \"open\", \"no-event\",\"unmatched\");\n        openedCards[1].classList.remove(\"show\", \"open\", \"no-event\",\"unmatched\");\n        enable();\n        openedCards = [];\n    },1100);\n}\n\n\n//  disable cards temporarily\nfunction disable(){\n    Array.prototype.filter.call(cards, function(card){\n        card.classList.add('disabled');\n    });\n}\n\n\n// enable cards and disable matched cards\nfunction enable(){\n    Array.prototype.filter.call(cards, function(card){\n        card.classList.remove('disabled');\n        for(var i = 0; i < matchedCard.length; i++){\n            matchedCard[i].classList.add(\"disabled\");\n        }\n    });\n}\n\n\n//  count player's moves\nfunction moveCounter(){\n    moves++;\n    counter.innerHTML = moves;\n    //start timer on first click\n    if(moves == 1){\n        second = 0;\n        minute = 0; \n        hour = 0;\n        startTimer();\n    }\n    // setting rates based on moves\n    if (moves > 8 && moves < 12){\n        for( i= 0; i < 3; i++){\n            if(i > 1){\n                stars[i].style.visibility = \"collapse\";\n            }\n        }\n    }\n    else if (moves > 13){\n        for( i= 0; i < 3; i++){\n            if(i > 0){\n                stars[i].style.visibility = \"collapse\";\n            }\n        }\n    }\n}\n\n\n//  game timer\nvar second = 0, minute = 0; hour = 0;\nvar timer = document.querySelector(\".timer\");\nvar interval;\nfunction startTimer(){\n    interval = setInterval(function(){\n        timer.innerHTML = minute+\"mins \"+second+\"secs\";\n        second++;\n        if(second == 60){\n            minute++;\n            second=0;\n        }\n        if(minute == 60){\n            hour++;\n            minute = 0;\n        }\n    },1000);\n}\n\n\n//  congratulations when all cards match, show modal and moves, time and rating\nfunction congratulations(){\n    if (matchedCard.length == 16){\n        clearInterval(interval);\n        finalTime = timer.innerHTML;\n\n        // show congratulations modal\n        modal.classList.add(\"show\");\n\n        // declare star rating variable\n        var starRating = document.querySelector(\".stars\").innerHTML;\n\n        //showing move, rating, time on modal\n        document.getElementById(\"finalMove\").innerHTML = moves;\n        document.getElementById(\"starRating\").innerHTML = starRating;\n        document.getElementById(\"totalTime\").innerHTML = finalTime;\n\n        //closeicon on modal\n        closeModal();\n    };\n}\n\n\n// n close icon on modal\nfunction closeModal(){\n    closeicon.addEventListener(\"click\", function(e){\n        modal.classList.remove(\"show\");\n        startGame();\n    });\n}\n\n\n//  for user to play Again \nfunction playAgain(){\n    modal.classList.remove(\"show\");\n    startGame();\n}\n\n\n// loop to add event listeners to each card\nfor (var i = 0; i < cards.length; i++){\n    card = cards[i];\n    card.addEventListener(\"click\", displayCard);\n    card.addEventListener(\"click\", cardOpen);\n    card.addEventListener(\"click\",congratulations);\n};\n","undoManager":{"mark":-2,"position":16,"stack":[[{"start":{"row":94,"column":3},"end":{"row":94,"column":36},"action":"remove","lines":["@description add opened cards to "],"id":2}],[{"start":{"row":94,"column":3},"end":{"row":94,"column":4},"action":"insert","lines":["o"],"id":3},{"start":{"row":94,"column":4},"end":{"row":94,"column":5},"action":"insert","lines":["p"]},{"start":{"row":94,"column":5},"end":{"row":94,"column":6},"action":"insert","lines":["e"]},{"start":{"row":94,"column":6},"end":{"row":94,"column":7},"action":"insert","lines":["n"]}],[{"start":{"row":94,"column":7},"end":{"row":94,"column":8},"action":"insert","lines":[" "],"id":4}],[{"start":{"row":109,"column":2},"end":{"row":109,"column":15},"action":"remove","lines":[" @description"],"id":5},{"start":{"row":109,"column":2},"end":{"row":109,"column":3},"action":"insert","lines":["s"]},{"start":{"row":109,"column":3},"end":{"row":109,"column":4},"action":"insert","lines":["c"]},{"start":{"row":109,"column":4},"end":{"row":109,"column":5},"action":"insert","lines":["t"]},{"start":{"row":109,"column":5},"end":{"row":109,"column":6},"action":"insert","lines":["o"]}],[{"start":{"row":109,"column":5},"end":{"row":109,"column":6},"action":"remove","lines":["o"],"id":6},{"start":{"row":109,"column":4},"end":{"row":109,"column":5},"action":"remove","lines":["t"]},{"start":{"row":109,"column":3},"end":{"row":109,"column":4},"action":"remove","lines":["c"]},{"start":{"row":109,"column":2},"end":{"row":109,"column":3},"action":"remove","lines":["s"]}],[{"start":{"row":109,"column":2},"end":{"row":109,"column":3},"action":"insert","lines":["s"],"id":7}],[{"start":{"row":109,"column":2},"end":{"row":109,"column":3},"action":"remove","lines":["s"],"id":8}],[{"start":{"row":109,"column":2},"end":{"row":109,"column":3},"action":"insert","lines":["a"],"id":9},{"start":{"row":109,"column":3},"end":{"row":109,"column":4},"action":"insert","lines":["c"]},{"start":{"row":109,"column":4},"end":{"row":109,"column":5},"action":"insert","lines":["t"]},{"start":{"row":109,"column":5},"end":{"row":109,"column":6},"action":"insert","lines":["i"]},{"start":{"row":109,"column":6},"end":{"row":109,"column":7},"action":"insert","lines":["o"]},{"start":{"row":109,"column":7},"end":{"row":109,"column":8},"action":"insert","lines":["n"]}],[{"start":{"row":119,"column":3},"end":{"row":119,"column":14},"action":"remove","lines":["description"],"id":10},{"start":{"row":119,"column":3},"end":{"row":119,"column":4},"action":"insert","lines":["a"]},{"start":{"row":119,"column":4},"end":{"row":119,"column":5},"action":"insert","lines":["c"]},{"start":{"row":119,"column":5},"end":{"row":119,"column":6},"action":"insert","lines":["t"]},{"start":{"row":119,"column":6},"end":{"row":119,"column":7},"action":"insert","lines":["i"]},{"start":{"row":119,"column":7},"end":{"row":119,"column":8},"action":"insert","lines":["o"]},{"start":{"row":119,"column":8},"end":{"row":119,"column":9},"action":"insert","lines":["n"]}],[{"start":{"row":133,"column":3},"end":{"row":133,"column":14},"action":"remove","lines":["@descriptio"],"id":11}],[{"start":{"row":133,"column":3},"end":{"row":133,"column":4},"action":"remove","lines":["n"],"id":12}],[{"start":{"row":141,"column":3},"end":{"row":141,"column":16},"action":"remove","lines":["@description "],"id":13}],[{"start":{"row":152,"column":3},"end":{"row":152,"column":15},"action":"remove","lines":["@description"],"id":14}],[{"start":{"row":181,"column":3},"end":{"row":181,"column":15},"action":"remove","lines":["@description"],"id":15}],[{"start":{"row":201,"column":3},"end":{"row":201,"column":15},"action":"remove","lines":["@description"],"id":16}],[{"start":{"row":224,"column":3},"end":{"row":224,"column":14},"action":"remove","lines":["@descriptio"],"id":17}],[{"start":{"row":233,"column":3},"end":{"row":233,"column":14},"action":"remove","lines":["@desciption"],"id":18}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":0,"column":0},"end":{"row":247,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":146,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1560694765509}